// generated with ast extension for cup
// version 0.8
// 25/5/2024 13:7:3


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(ReturnType ReturnType);
    public void visit(VarDeclsList VarDeclsList);
    public void visit(OpDesignatorStatementList OpDesignatorStatementList);
    public void visit(OpMultipleDesignators OpMultipleDesignators);
    public void visit(OpFormPars OpFormPars);
    public void visit(FunctionCall FunctionCall);
    public void visit(MultipleConstList MultipleConstList);
    public void visit(OpMethodDeclList OpMethodDeclList);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(OpVarDeclList OpVarDeclList);
    public void visit(GlobalVarDecl GlobalVarDecl);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(OpForCondition OpForCondition);
    public void visit(Condition Condition);
    public void visit(MulOp MulOp);
    public void visit(OpDeclList OpDeclList);
    public void visit(OpDesignatorStatementMultiple OpDesignatorStatementMultiple);
    public void visit(ConstDef ConstDef);
    public void visit(IfCondition IfCondition);
    public void visit(RelOp RelOp);
    public void visit(AssignOp AssignOp);
    public void visit(StatementIfBody StatementIfBody);
    public void visit(DesignatorAssignOpExpr DesignatorAssignOpExpr);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(AddOp AddOp);
    public void visit(VarDeclDef VarDeclDef);
    public void visit(OpConditionJul OpConditionJul);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Const Const);
    public void visit(GlobalVarPart GlobalVarPart);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(OpExprTerm OpExprTerm);
    public void visit(Type Type);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(OpDesignator OpDesignator);
    public void visit(GlobalVarList GlobalVarList);
    public void visit(OpStatements OpStatements);
    public void visit(FormPars FormPars);
    public void visit(FormParam FormParam);
    public void visit(DivOp DivOp);
    public void visit(ProcOp ProcOp);
    public void visit(MultOp MultOp);
    public void visit(MinusOp MinusOp);
    public void visit(PlusOp PlusOp);
    public void visit(LEEQOp LEEQOp);
    public void visit(LEOp LEOp);
    public void visit(GREQOp GREQOp);
    public void visit(GROp GROp);
    public void visit(NOEQOp NOEQOp);
    public void visit(EQOp EQOp);
    public void visit(EQUALOp EQUALOp);
    public void visit(Label Label);
    public void visit(DoubleTerm DoubleTerm);
    public void visit(SingleTerm SingleTerm);
    public void visit(DoubleCondTerm DoubleCondTerm);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(DoubleCondFact DoubleCondFact);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(PreActPars PreActPars);
    public void visit(FunctionCallNoPars FunctionCallNoPars);
    public void visit(FunctionCallPars FunctionCallPars);
    public void visit(NoDesignatorStatementMultiple NoDesignatorStatementMultiple);
    public void visit(OpDesignatorStatementMultiples OpDesignatorStatementMultiples);
    public void visit(NoDesignatorStatementList NoDesignatorStatementList);
    public void visit(OpDesignatorStatementFull OpDesignatorStatementFull);
    public void visit(NoForCondition NoForCondition);
    public void visit(ForCondition ForCondition);
    public void visit(MultipleCondition MultipleCondition);
    public void visit(SingleCondition SingleCondition);
    public void visit(NoExprTerm NoExprTerm);
    public void visit(AddOperation AddOperation);
    public void visit(PlusExpr PlusExpr);
    public void visit(MultiExpr MultiExpr);
    public void visit(ActParsSingle ActParsSingle);
    public void visit(ActParsMulti ActParsMulti);
    public void visit(FactorRange FactorRange);
    public void visit(FactorParen FactorParen);
    public void visit(FactorNewArr FactorNewArr);
    public void visit(FactorNewVarNoActPars FactorNewVarNoActPars);
    public void visit(FactorNewVar FactorNewVar);
    public void visit(FactorConst FactorConst);
    public void visit(FactorFuncCall FactorFuncCall);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(NoMultipleDesignators NoMultipleDesignators);
    public void visit(YesMultipleDesignators YesMultipleDesignators);
    public void visit(OnErrorAssignOp OnErrorAssignOp);
    public void visit(DesignatorAssignOpExprOk DesignatorAssignOpExprOk);
    public void visit(ArrHelp ArrHelp);
    public void visit(DesignatorIdent DesignatorIdent);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(NoDesignator NoDesignator);
    public void visit(YesDesignator YesDesignator);
    public void visit(OpConditionJulNo OpConditionJulNo);
    public void visit(OpConditionJulYes OpConditionJulYes);
    public void visit(DodatakJul DodatakJul);
    public void visit(DesignatorStatementDodatno DesignatorStatementDodatno);
    public void visit(DesignatorStatementDec DesignatorStatementDec);
    public void visit(DesignatorStatementInc DesignatorStatementInc);
    public void visit(DesignatorStatementFuncCall DesignatorStatementFuncCall);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(IfCondError IfCondError);
    public void visit(IfCond IfCond);
    public void visit(StmtIfBody StmtIfBody);
    public void visit(StmtFor StmtFor);
    public void visit(StmtIf StmtIf);
    public void visit(StmtIfElse StmtIfElse);
    public void visit(Stmt Stmt);
    public void visit(StmtPrint StmtPrint);
    public void visit(StmtPrintNumConst StmtPrintNumConst);
    public void visit(StmtRead StmtRead);
    public void visit(StmtReturn StmtReturn);
    public void visit(StmtReturnExpr StmtReturnExpr);
    public void visit(StmtContinue StmtContinue);
    public void visit(StmtBreak StmtBreak);
    public void visit(StmtDesign StmtDesign);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(OpVarDeclLists OpVarDeclLists);
    public void visit(NoStatements NoStatements);
    public void visit(OpStatementss OpStatementss);
    public void visit(ParamError ParamError);
    public void visit(ParamArray ParamArray);
    public void visit(ParamNormal ParamNormal);
    public void visit(ParamSingle ParamSingle);
    public void visit(ParamMulti ParamMulti);
    public void visit(NoFormPars NoFormPars);
    public void visit(YesFormPars YesFormPars);
    public void visit(VoidRetType VoidRetType);
    public void visit(ReturnTypeIdent ReturnTypeIdent);
    public void visit(MethodSignature MethodSignature);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(MethodDeclListDef MethodDeclListDef);
    public void visit(TypeIdent TypeIdent);
    public void visit(GlobalVarError GlobalVarError);
    public void visit(GlobalVarDeclDefNoBrace GlobalVarDeclDefNoBrace);
    public void visit(GlobalVarDeclDefBrace GlobalVarDeclDefBrace);
    public void visit(GlobalVarSingle GlobalVarSingle);
    public void visit(GlobalVarMulti GlobalVarMulti);
    public void visit(GlobalVarDeclaration GlobalVarDeclaration);
    public void visit(VarDeclNoBrace VarDeclNoBrace);
    public void visit(VarDeclBrace VarDeclBrace);
    public void visit(SingleVarDeclsList SingleVarDeclsList);
    public void visit(VarDeclsListDef VarDeclsListDef);
    public void visit(VarDeclOk VarDeclOk);
    public void visit(SingleConst SingleConst);
    public void visit(NoMultipleConstList NoMultipleConstList);
    public void visit(MultipleConstListDef MultipleConstListDef);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(ConstDeclarationListDef ConstDeclarationListDef);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(NoDeclList NoDeclList);
    public void visit(DeclsList DeclsList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
